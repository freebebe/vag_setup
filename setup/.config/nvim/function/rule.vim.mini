
"=========================语法高亮-字典
syntax enable
syntax on
  autocmd InsertLeave,WinEnter * set cursorline
  autocmd InsertLeave,WinEnter * set nocursorline
au BufNewFile,BufRead *.ejs set filetype=html

"Show folding level
if has('neovim')
    set foldcolumn=auto:1
else
    set foldcolumn=1
endif
set fillchars=vert:\|
set commentstring=%s

if exists('*FoldCCtext')
    " use FoldCCtext
    set foldtext=FoldCCtext()
endif

"=========================重载保存文件
autocmd BufWritePost $MYVIMRC source $MYVIMRC
autocmd BufWritePost ~/.Xdefaults call system('xrdb ~/.Xdefaults')

" incremental substitution 增值替代 (neovim)
if has('neovim')
    set inccommand=split
endif


"=========================Highlight all instances of word under cursor, when idle.
                          " http://vim.wikia.com/wiki/Auto_highlight_current_word_when_idle
                          " Useful when studying strange source code.
                          " Type z/ to toggle highlighting on/off.
nnoremap z/ :if AutoHighlightToggle()<Bar>set hls<Bar>endif<CR>
function! AutoHighlightToggle()
    let @/ = ''
    if exists('#auto_highlight')
        au! auto_highlight
        augroup! auto_highlight
        setl updatetime=4000
        echo 'Highlight current word: off'
        return 0
    else
        augroup auto_highlight
            au!
            au CursorHold * let @/ = '\V\<'.escape(expand('<cword>'), '\').'\>'
        augroup end
        setl updatetime=300
        echo 'Highlight current word: ON'
            return 1
        endif
    endfunction

"======!!!error!!========" Clean all useless whitespace清理所有无用空白
autocmd BufWritePre *
    \ if !exists('g:skip_clean_whitespace') && !exists('b:skip_clean_whitespace')|
    \   call lib#WithSavedState('%s/\s\+$//e')|
    \ endif

"========================" Speed up transition from modes
if ! has('gui_running')
    set ttimeoutlen=10
    augroup FastEscape
        autocmd InsertEnter * set timeoutlen=0
        autocmd InsertLeave * set timeoutlen=1000
    augroup END
endif
